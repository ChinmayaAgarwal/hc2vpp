<?xml version="1.0" encoding="UTF-8"?>
<!-- vi: set et smarttab sw=4 tabstop=4: -->
<!--
 Copyright (c) 2015 Cisco and/or its affiliates.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at:

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<snapshot>
  <required-capabilities>
      <capability>urn:opendaylight:params:xml:ns:yang:v3po:impl?module=v3po-impl&amp;revision=2014-12-10</capability>
      <capability>urn:honeycomb:params:xml:ns:yang:translate:utils?module=translate-utils&amp;revision=2016-04-06</capability>
      <capability>urn:honeycomb:params:xml:ns:yang:vpp:jvpp:cfg?module=vpp-jvpp-cfg&amp;revision=2016-04-06</capability>
      <capability>urn:honeycomb:params:xml:ns:yang:vpp:data:init?module=vpp-cfg-init&amp;revision=2016-04-07</capability>
      <capability>urn:honeycomb:params:xml:ns:yang:data:api?module=data-api&amp;revision=2016-04-11</capability>
      <capability>urn:honeycomb:params:xml:ns:yang:data:impl?module=data-impl&amp;revision=2016-04-11</capability>
      <capability>urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding?module=opendaylight-md-sal-binding&amp;revision=2013-10-28</capability>
  </required-capabilities>
  <configuration>

    <data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
      <modules xmlns="urn:opendaylight:params:xml:ns:yang:controller:config">

        <module>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:translate:utils">prefix:delegating-reader-registry</type>
          <name>read-registry</name>
        </module>
        <module>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:translate:utils">prefix:delegating-writer-registry</type>
          <name>write-registry</name>
        </module>

        <!-- In-memory data tree for HC config data tree -->
        <module>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:impl">prefix:inmemory-data-tree</type>
          <name>inmemory-config-data-tree</name>
          <schema-service>
            <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:schema-service</type>
            <name>yang-schema-service</name>
          </schema-service>
          <type xmlns="urn:honeycomb:params:xml:ns:yang:data:impl">config</type>
        </module>

        <!-- DataTree adapter with persistence for config DT -->
        <module>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:impl">prefix:persisting-data-tree-adapter</type>
          <name>inmemory-persisted-config-data-tree</name>
          <delegate>
            <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:data-tree</type>
            <name>inmemory-config-data-tree</name>
          </delegate>
          <schema-service>
            <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:schema-service</type>
            <name>yang-schema-service</name>
          </schema-service>
          <persist-file-path>etc/opendaylight/honeycomb/config.json</persist-file-path>
        </module>


        <!-- HC config data tree -->
        <module>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:impl">prefix:honeycomb-config-data-tree</type>
          <name>config-data-tree</name>
          <!-- Without persistence -->
          <!--<data-tree>-->
            <!--<type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:impl">prefix:data-tree</type>-->
            <!--<name>inmemory-config-data-tree</name>-->
          <!--</data-tree>-->
          <!-- With persistence -->
          <data-tree>
            <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:data-tree</type>
            <name>inmemory-persisted-config-data-tree</name>
          </data-tree>

          <serializer>
            <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding:impl">prefix:binding-dom-mapping-service</type>
            <name>runtime-mapping-singleton</name>
          </serializer>
          <writer-registry>
            <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:translate:api">prefix:honeycomb-writer-registry</type>
            <name>write-registry</name>
          </writer-registry>
        </module>

        <!-- FIXME workaround for: https://git.opendaylight.org/gerrit/#/c/37499/ Move to netconf-north-config-->
        <module>
          <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:inmemory-datastore-provider">prefix:inmemory-config-datastore-provider</type>
          <name>netconf-config-store-service</name>
          <inmemory-config-datastore-provider xmlns="urn:opendaylight:params:xml:ns:yang:controller:inmemory-datastore-provider">
            <schema-service>
              <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:schema-service</type>
              <name>yang-schema-service</name>
            </schema-service>
          </inmemory-config-datastore-provider>
        </module>
        <module>
          <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:inmemory-datastore-provider">prefix:inmemory-operational-datastore-provider</type>
          <name>netconf-operational-store-service</name>
          <inmemory-operational-datastore-provider xmlns="urn:opendaylight:params:xml:ns:yang:controller:inmemory-datastore-provider">
            <schema-service>
              <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:schema-service</type>
              <name>yang-schema-service</name>
            </schema-service>
          </inmemory-operational-datastore-provider>
        </module>
        <module>
          <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom:impl">prefix:dom-inmemory-data-broker</type>
          <name>netconf-inmemory-data-broker</name>

          <schema-service>
            <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:schema-service</type>
            <name>yang-schema-service</name>
          </schema-service>

          <config-data-store>
            <type xmlns:config-dom-store-spi="urn:opendaylight:params:xml:ns:yang:controller:md:sal:core:spi:config-dom-store">config-dom-store-spi:config-dom-datastore</type>
            <name>netconf-config-store-service</name>
          </config-data-store>

          <operational-data-store>
            <type xmlns:operational-dom-store-spi="urn:opendaylight:params:xml:ns:yang:controller:md:sal:core:spi:operational-dom-store">operational-dom-store-spi:operational-dom-datastore</type>
            <name>netconf-operational-store-service</name>
          </operational-data-store>
        </module>
        <!-- FIXME end-->

        <!-- HC operational data tree -->
        <module>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:impl">prefix:honeycomb-operational-data-tree</type>
          <name>operational-data-tree</name>
          <schema-service>
            <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:schema-service</type>
            <name>yang-schema-service</name>
          </schema-service>
          <serializer>
            <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding:impl">prefix:binding-dom-mapping-service</type>
            <name>runtime-mapping-singleton</name>
          </serializer>
          <reader-registry>
            <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:translate:api">prefix:honeycomb-reader-registry</type>
            <name>read-registry</name>
          </reader-registry>
          <netconf-monitoring-dom-data-broker>
            <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:dom-async-data-broker</type>
            <name>netconf-inmemory-data-broker</name>
          </netconf-monitoring-dom-data-broker>
        </module>

        <!-- DOM data broker which provides transaction functionality for HC using BI format-->
        <module>
          <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:v3po:impl">prefix:honeycomb-dom-data-broker</type>
          <name>honeycomb-dom-data-broker</name>
          <config-data-tree>
            <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:honeycomb-modifiable-data-tree</type>
            <name>config-data-tree</name>
          </config-data-tree>
          <operational-data-tree>
            <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:honeycomb-readable-data-tree</type>
            <name>operational-data-tree</name>
          </operational-data-tree>
        </module>

        <!-- Binding data broker which provides transaction functionality for HC using BA format -->
        <module>
          <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding:impl">prefix:binding-forwarded-data-broker</type>
          <name>honeycomb-binding-data-broker</name>
          <binding-forwarded-data-broker xmlns="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding:impl">

            <dom-async-broker>
              <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:dom-async-data-broker</type>
              <name>honeycomb-dom-data-broker</name>
            </dom-async-broker>
            <schema-service>
              <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:schema-service</type>
              <name>yang-schema-service</name>
            </schema-service>
            <binding-mapping-service>
              <type xmlns:binding="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding:impl">binding:binding-dom-mapping-service</type>
              <name>runtime-mapping-singleton</name>
            </binding-mapping-service>
          </binding-forwarded-data-broker>
        </module>

        <module>
          <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:v3po:impl">prefix:v3po</type>
          <name>v3po-default</name>
          <dom-broker>
            <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">prefix:dom-broker-osgi-registry</type>
            <name>dom-broker</name>
          </dom-broker>
          <honeycomb-dom-data-broker>
            <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">prefix:dom-async-data-broker</type>
            <name>honeycomb-dom-data-broker</name>
          </honeycomb-dom-data-broker>
        </module>

        <!-- Config initialization -->
        <!-- Empty registry which does not pass data to VPP  -->
        <module>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:translate:utils">prefix:noop-writer-registry</type>
          <name>noop-writer-registry</name>
        </module>
        <!-- Config data tree which does not pass data to translation layer (uses noop-write-registry)  -->
        <module>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:impl">prefix:honeycomb-config-data-tree</type>
          <name>cfg-init-config-data-tree</name>

          <!--FIXME do we need/want persistence here ? Do initializers only merge the data ? -->
          <!-- Without persistence -->
          <!--<data-tree>-->
            <!--<type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:impl">prefix:data-tree</type>-->
            <!--<name>inmemory-config-data-tree</name>-->
          <!--</data-tree>-->
          <!-- With persistence -->
          <data-tree>
            <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:data-tree</type>
            <name>inmemory-persisted-config-data-tree</name>
          </data-tree>

          <serializer>
            <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding:impl">prefix:binding-dom-mapping-service</type>
            <name>runtime-mapping-singleton</name>
          </serializer>
          <writer-registry>
            <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:translate:api">prefix:honeycomb-writer-registry</type>
            <name>noop-writer-registry</name>
          </writer-registry>
        </module>
        <!-- DOM data broker for config initialization -->
        <module>
          <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:v3po:impl">prefix:honeycomb-dom-data-broker</type>
          <name>cfg-init-dom-data-broker</name>
          <config-data-tree>
            <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:honeycomb-modifiable-data-tree</type>
            <name>cfg-init-config-data-tree</name>
          </config-data-tree>
          <operational-data-tree>
            <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:honeycomb-readable-data-tree</type>
            <name>operational-data-tree</name>
          </operational-data-tree>
        </module>
        <!-- Binding data broker for config initialization -->
        <module>
          <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding:impl">prefix:binding-forwarded-data-broker</type>
          <name>cfg-init-binding-data-broker</name>
          <binding-forwarded-data-broker xmlns="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding:impl">
            <dom-async-broker>
              <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:dom-async-data-broker</type>
              <name>cfg-init-dom-data-broker</name>
            </dom-async-broker>
            <schema-service>
              <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:schema-service</type>
              <name>yang-schema-service</name>
            </schema-service>
            <binding-mapping-service>
              <type xmlns:binding="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding:impl">binding:binding-dom-mapping-service</type>
              <name>runtime-mapping-singleton</name>
            </binding-mapping-service>
          </binding-forwarded-data-broker>
        </module>
        <!-- Config initializer -->
        <module>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:vpp:data:init">prefix:vpp-cfg-initializer-impl</type>
          <name>vpp-cfg-initializer</name>
          <binding-data-broker>
            <type xmlns:prefix="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding">prefix:binding-async-data-broker</type>
            <name>cfg-init-binding-data-broker</name>
          </binding-data-broker>
        </module>noop-writer-registry
        <!-- END: Config initialization -->
      </modules>

      <services xmlns="urn:opendaylight:params:xml:ns:yang:controller:config">
        <!-- FIXME workaround for: https://git.opendaylight.org/gerrit/#/c/37499/ Move to netconf-north-config -->

        <service>
          <type xmlns:config-dom-store-spi="urn:opendaylight:params:xml:ns:yang:controller:md:sal:core:spi:config-dom-store">config-dom-store-spi:config-dom-datastore</type>
          <instance>
            <name>netconf-config-store-service</name>
            <provider>/modules/module[type='inmemory-config-datastore-provider'][name='netconf-config-store-service']</provider>
          </instance>
        </service>
        <service>
          <type xmlns:operational-dom-store-spi="urn:opendaylight:params:xml:ns:yang:controller:md:sal:core:spi:operational-dom-store">operational-dom-store-spi:operational-dom-datastore</type>
          <instance>
            <name>netconf-operational-store-service</name>
            <provider>/modules/module[type='inmemory-operational-datastore-provider'][name='netconf-operational-store-service']</provider>
          </instance>
        </service>
        <service>
          <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:dom-async-data-broker</type>
          <instance>
            <name>netconf-inmemory-data-broker</name>
            <provider>/modules/module[type='dom-inmemory-data-broker'][name='netconf-inmemory-data-broker']</provider>
          </instance>
        </service>
        <!-- FIXME end-->


        <service>
          <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:dom-async-data-broker</type>
          <instance>
            <name>honeycomb-dom-data-broker</name>
            <provider>/modules/module[type='honeycomb-dom-data-broker'][name='honeycomb-dom-data-broker']</provider>
          </instance>
        </service>

        <service>
          <type xmlns:binding="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding">binding:binding-async-data-broker</type>
          <instance>
            <name>honeycomb-binding-data-broker</name>
            <provider>/modules/module[type='binding-forwarded-data-broker'][name='honeycomb-binding-data-broker']</provider>
          </instance>
        </service>

        <service>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:translate:api">prefix:honeycomb-reader-registry</type>
          <instance>
            <name>read-registry</name>
            <provider>/modules/module[type='delegating-reader-registry'][name='read-registry']</provider>
          </instance>
        </service>
        <service>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:translate:api">prefix:honeycomb-writer-registry</type>
          <instance>
            <name>write-registry</name>
            <provider>/modules/module[type='delegating-writer-registry'][name='write-registry']</provider>
          </instance>
        </service>

        <service>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:data-tree</type>
          <instance>
            <name>inmemory-config-data-tree</name>
            <provider>/modules/module[type='inmemory-data-tree'][name='inmemory-config-data-tree']
            </provider>
          </instance>
          <instance>
            <name>inmemory-persisted-config-data-tree</name>
            <provider>/modules/module[type='persisting-data-tree-adapter'][name='inmemory-persisted-config-data-tree']
            </provider>
          </instance>
        </service>

        <service>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:honeycomb-modifiable-data-tree</type>
          <instance>
            <name>config-data-tree</name>
            <provider>/modules/module[type='honeycomb-config-data-tree'][name='config-data-tree']
            </provider>
          </instance>
        </service>
        <service>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:honeycomb-readable-data-tree</type>
          <instance>
            <name>operational-data-tree</name>
            <provider>/modules/module[type='honeycomb-operational-data-tree'][name='operational-data-tree']
            </provider>
          </instance>
        </service>
        <service>
          <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">
            dom:dom-broker-osgi-registry
          </type>
          <instance>
            <name>vpp-dom-broker</name>
            <provider>/modules/module[type='v3po'][name='v3po-default']</provider>
          </instance>
        </service>

        <!-- Config initialization -->
        <service>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:translate:api">prefix:honeycomb-writer-registry</type>
          <instance>
            <name>noop-writer-registry</name>
            <provider>/modules/module[type='noop-writer-registry'][name='noop-writer-registry']</provider>
          </instance>
        </service>
        <service>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:data:api">prefix:honeycomb-modifiable-data-tree</type>
          <instance>
            <name>cfg-init-config-data-tree</name>
            <provider>/modules/module[type='honeycomb-config-data-tree'][name='cfg-init-config-data-tree']
            </provider>
          </instance>
        </service>
        <service>
          <type xmlns:dom="urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom">dom:dom-async-data-broker</type>
          <instance>
            <name>cfg-init-dom-data-broker</name>
            <provider>/modules/module[type='honeycomb-dom-data-broker'][name='cfg-init-dom-data-broker']</provider>
          </instance>
        </service>
        <service>
          <type xmlns:binding="urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding">binding:binding-async-data-broker</type>
          <instance>
            <name>cfg-init-binding-data-broker</name>
            <provider>/modules/module[type='binding-forwarded-data-broker'][name='cfg-init-binding-data-broker']</provider>
          </instance>
        </service>
        <service>
          <type xmlns:prefix="urn:honeycomb:params:xml:ns:yang:vpp:data:init">prefix:vpp-cfg-initializer</type>
          <instance>
            <name>vpp-cfg-initializer</name>
            <provider>/modules/module[type='vpp-cfg-initializer-impl'][name='vpp-cfg-initializer']
            </provider>
          </instance>
        </service>
        <!-- END: Config initialization -->

      </services>
    </data>
  </configuration>
</snapshot>
