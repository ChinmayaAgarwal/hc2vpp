<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016 Cisco and/or its affiliates.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at:
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>io.fd.hc2vpp.common</groupId>
    <artifactId>hc2vpp-parent</artifactId>
    <version>1.19.04-SNAPSHOT</version>
    <relativePath>../common/hc2vpp-parent</relativePath>
  </parent>

  <groupId>io.fd.hc2vpp</groupId>
  <artifactId>release-notes-aggregator</artifactId>
  <version>1.19.04-SNAPSHOT</version>
  <name>${project.artifactId}</name>
  <packaging>pom</packaging>
  <modelVersion>4.0.0</modelVersion>
  <description>Hc2vpp release notes</description>

  <dependencies>
    <dependency>
        <groupId>io.fd.hc2vpp.docs</groupId>
        <artifactId>docs</artifactId>
        <version>${project.version}</version>
    </dependency>
  </dependencies>

  <!-- Do not push, this is just a documentation producer -->
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-dependency-plugin</artifactId>
         <version>3.1.1</version>
         <executions>
            <execution>
                <id>unpack-configuration</id>
                <phase>generate-sources</phase>
                <goals>
                    <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                    <includes>*.adoc</includes>
                    <outputDirectory>${project.build.directory}/raw-adoc/api_docs</outputDirectory>
                </configuration>
            </execution>
         </executions>
      </plugin>

     <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${asciidoctor.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>output-html</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <!-- https://github.com/asciidoctor/asciidoctor-maven-plugin -->
              <!-- http://asciidoctor.org/docs/asciidoc-syntax-quick-reference -->
              <!-- raw-adoc folder combines docs from src folder + generated api docs files,
              in order to have them all available while generating site -->
              <baseDir>${project.build.directory}/raw-adoc</baseDir>
              <backend>html5</backend>
              <doctype>docbook</doctype>
              <sourceHighlighter>coderay</sourceHighlighter>
              <!-- http://asciidoc.org/userguide.html#X88 -->
              <attributes>
                <sectnums>true</sectnums>
                <toc>left</toc>
                <icons>font</icons>
                <prewrap>false</prewrap>
                <nowrap>true</nowrap>
                <!-- Attributes below are inlined into resulting documentation,
                making it much easier when bumping versions -->
                <project-version>${project.version}</project-version>
                <project-public-version>19.04</project-public-version>
                <project-config-version>1-19-04</project-config-version>
                <project-version-in-jira>11701</project-version-in-jira>
                <project-branch>master</project-branch>
                <project-odl-version>oxygen</project-odl-version>
                <project-vpp-version>19.04</project-vpp-version>
                <!-- TODO set snapshot version to project-vpp-version after VPP is released-->
                <!--<project-vpp-snapshot-version>19.04</project-vpp-snapshot-version>-->
                <project-vpp-snapshot-version>19.04-SNAPSHOT</project-vpp-snapshot-version>
                <project-nat-version>19.04</project-nat-version>
                <!-- TODO set snapshot version to project-nat-version after VPP is released-->
                <!--<project-nat-snapshot-version>19.01</project-nat-snapshot-version>-->
                <project-nat-snapshot-version>19.04-SNAPSHOT</project-nat-snapshot-version>
                <project-git-web>https://git.fd.io/cgit/hc2vpp/tree</project-git-web>
                <project-infra-git-web>https://git.fd.io/cgit/honeycomb/tree</project-infra-git-web>
              </attributes>
            </configuration>
          </execution>
        </executions>
        <!-- Diagrams not supported -->
      </plugin>

      <!-- Copy release notes also to site -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-raw-adoc</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/raw-adoc</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.basedir}/src/main/asciidoc/</directory>
                  </resource>
                </resources>
             </configuration>
          </execution>
          <execution>
            <id>copy-release-notes-to-site</id>
            <phase>site</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/site</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/generated-docs/</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
